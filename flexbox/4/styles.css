/*

Because justify-content and align-items are based on the main and cross axis of your container, their behavior changes when you change the flex-direction of a flex-container. For example, when you change flex-direction to column, justify-content aligns vertically and align-items aligns horizontally. The most common behavior, however, is the default, i.e. justify-content aligns items horizontally (because the main axis defaults to horizontal), and align-items aligns them vertically. One of the biggest sticking points that beginners have with flexbox is confusion when this behavior changes.


The cross axis runs perpendicular to the main axis, therefore if your flex-direction (main axis) is set to row or row-reverse the cross axis runs down the columns.
If your main axis is column or column-reverse then the cross axis runs along the rows.
*/

.container{
    background: plum;
    height: 160px;
    padding: 16px;
    display: flex;
    border: 4px solid indigo;
    /*justify-content aligns items across the main axis.*/
    justify-content: center; /*age ino mizari dg flex: 1; ro paeen to item nazar */

    /* To change the placement of items along the cross axis use align-items*/
    align-items: center;

    gap: 8px; /* setting gap on a flex container simply adds a specified space between flex items, very similar to adding a margin to the items themselves*/
}


.item{
    width: 60px;
    height: 60px;
    border: 4px solid darkslategrey;
    background-color: skyblue;
    
    
}